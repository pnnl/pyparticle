name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package + dev deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run tests with coverage (xml + terminal)
        run: |
          pytest -q --cov=pyparticle --cov-report=xml:coverage.xml --cov-report=term-missing

      # Optional: enforce a minimum coverage. Set MIN_COVERAGE to taste (e.g., 70).
      - name: Enforce minimum coverage
        env:
          MIN_COVERAGE: "0"
        run: |
          python - <<'PY'
          import os, sys, xml.etree.ElementTree as ET
          tree = ET.parse('coverage.xml')
          rate = float(tree.getroot().get('line-rate') or 0.0) * 100
          thresh = float(os.environ.get('MIN_COVERAGE', '0'))
          print(f"Coverage: {rate:.2f}% (min {thresh:.2f}%)")
          summary = os.environ.get('GITHUB_STEP_SUMMARY')
          if summary:
              with open(summary, 'a') as f:
                  f.write(f"## Test coverage\n\n- **Line coverage:** {rate:.2f}%\n- **Threshold:** {thresh:.2f}%\n")
          if rate < thresh:
              print("Coverage below threshold"); sys.exit(1)
          PY

      - name: Build HTML coverage report
        run: |
          python -m pip install coverage
          coverage html -i -d htmlcov

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifacts
          path: |
            coverage.xml
            htmlcov/
          retention-days: 7

